#!/bin/bash
#START config_header.bash

#initialise environment
if [ ! -x ${MAS_VAR:=/usr/mce/bin/mas_var} ]; then
  echo "Cannot find mas_var.  Set MAS_VAR to the full path to the mas_var binary." >&2
  exit 1
else
  eval $(${MAS_VAR} -s)
fi

source ${MAS_SCRIPT}/mas_library.bash

#END config_header.bash
# START mas_param output
array_id="BA4_R4p8_20230516"
array_width=41
hardware_rc=( 1 1 1 1 )
hardware_sync=0
hardware_rect=1
hardware_mux11d=1
hardware_fast_sq2=2
hardware_rc_data=( 1 1 1 1 )
sb0_select_clk=0
sb0_use_dv=0
sb0_use_sync=0
sb1_select_clk=1
sb1_use_dv=2
sb1_use_sync=2
default_num_rows=41
default_sample_num=10
default_data_mode=10
default_flux_jumping=1
default_servo_p=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
default_servo_i=( 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 )
default_servo_d=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
default_sa_bias=( 17000 17500 17500 17000 17500 17500 17000 17000 15500 15500 15500 15500 15500 15500 16000 15500 15500 16000 16000 16000 17000 16000 15500 16000 17000 17000 17000 17000 17000 17000 16500 17000 )
default_sq2_bias=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
default_sq1_bias=( 4500 4500 4500 5000 3000 6500 7500 4000 7500 0 8000 0 7000 0 8000 8000 5000 8000 8000 5500 8500 9000 8500 8500 8500 8500 8000 9000 8500 9000 8500 9000 0 0 0 0 0 0 0 0 0 )
default_sq1_bias_off=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
default_row_select=( 8200 8100 8200 8450 8600 8300 8100 8200 8300 8300 8100 8000 8000 8000 8500 8400 8300 8100 8000 8200 8300 8100 8100 8100 8200 8300 8000 8000 8200 8100 8200 8200 8100 9000 9000 9000 9000 9000 9000 9000 9000 )
default_row_deselect=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
columns_off=( 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
config_filter=1
filter_params=( 32295 15915 32568 16188 5 12 )
stop_after_sq1_servo=0
sa_offset_bias_ratio=0.500000
sa_ramp_bias=0
sa_ramp_flux_start=0
sa_ramp_flux_count=120
sa_ramp_flux_step=100
sa_ramp_bias_start=0
sa_ramp_bias_step=500
sa_ramp_bias_count=50
sq2_rows=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_servo_gain=( 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 )
sq1_servo_gain=( 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 )
sq2servo_gain=( 0.020000 0.020000 0.020000 0.020000 )
sq1servo_gain=( 0.010000 0.010000 0.010000 0.010000 )
sq2_servo_flux_start=0
sq2_servo_flux_count=400
sq2_servo_flux_step=30
sq1_servo_flux_start=-8000
sq1_servo_flux_count=400
sq1_servo_flux_step=40
sq2_servo_bias_ramp=0
sq2_servo_bias_start=2500
sq2_servo_bias_count=24
sq2_servo_bias_step=2500
sq1_servo_bias_ramp=1
sq1_servo_bias_start=0
sq1_servo_bias_count=60
sq1_servo_bias_step=500
sq1_servo_all_rows=0
config_mux11d_all_rows=1
mux11d_row_choice=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
optimize_rowsel_servo=0
rowsel_servo_flux_start=0
rowsel_servo_flux_count=100
rowsel_servo_flux_step=200
rowsel_servo_bias_ramp=0
rowsel_servo_bias_start=0
rowsel_servo_bias_count=20
rowsel_servo_bias_step=500
rowsel_servo_gain=( 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 )
sq1_ramp_flux_start=-3000
sq1_ramp_flux_step=50
sq1_ramp_flux_count=121
sq1_ramp_check=1
locktest_pass_amplitude=5000
sq1_ramp_tes_bias=1
sq1_ramp_tes_bias_start=0
sq1_ramp_tes_bias_step=1
sq1_ramp_tes_bias_count=50
tes_bias_idle=( 0 0 0 )
tes_bias_normal=( 0 0 0 )
tes_bias_normal_time=0.100000
tes_bias_do_reconfig=0
reconfig_use_auto_iv=0
tuning_check_bias=0
tuning_therm_time=210
tuning_do_plots=1
tuning_plot_format="png"
sq2servo_safb_init=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq1servo_sq2fb_init=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sa_ramp_safb_adjust=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_servo_sq2fb_adjust=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_servo_ic_factor=1.000000
sq1_servo_ic_factor=1.000000
write_default_bias=0
ramp_tes_start=0
ramp_tes_step=0
ramp_tes_count=0
ramp_tes_final_bias=0
ramp_tes_initial_pause=0
ramp_tes_period_us=0
iv_data_mode=10
bias_line_card=( 7 8 9 )
bias_line_para=( 33 33 33 )
config_rc=( 1 1 1 1 )
config_sync=0
config_fast_sq2=0
config_fast_sq1_bias=1
config_fast_sa_fb=1
config_dead_tes=0
config_frail_tes=0
data_rate=60
row_len=120
num_rows=41
num_rows_reported=41
readout_row_index=0
sample_dly=110
sample_num=10
fb_dly=7
row_dly=4
data_mode=10
flux_jumping=1
servo_mode=3
servo_p=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
servo_i=( 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 )
servo_d=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
frail_servo_p=0
frail_servo_i=-10
frail_servo_d=0
dead_mask_list=( "squid1" "connection" )
dead_detectors
frail_mask_list=( "squid1" "multilock" "jumper" "connection" "tes_short" "other" )
frail_detectors
tes_bias=( 0 0 0 )
config_integral_clamp=0
integral_clamp_factor=0.000000
row_order=( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 )
sa_flux_quanta=( 6510 6510 6510 6510 6515 6510 6515 6510 6505 0 6505 0 6510 0 6500 6500 6525 6530 6525 6520 6525 6520 6530 6525 6450 6455 6455 6455 6455 6450 6450 6450 )
sq2_flux_quanta=( 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 )
config_flux_quanta_all=1
flux_quanta=( 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 )
flux_quanta_all
fb_const=-8192
row_select=( 8200 8100 8200 8450 8600 8300 8100 8200 8300 8300 8100 8000 8000 8000 8500 8400 8300 8100 8000 8200 8300 8100 8100 8100 8200 8300 8000 8000 8200 8100 8200 8200 8100 9000 9000 9000 9000 9000 9000 9000 9000 )
row_deselect=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq1_bias=( 4500 4500 4500 5000 3000 6500 7500 4000 7500 0 8000 0 7000 0 8000 8000 5000 8000 8000 5500 8500 9000 8500 8500 8500 8500 8000 9000 8500 9000 8500 9000 0 0 0 0 0 0 0 0 0 )
sq1_bias_off=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq1_bias_set=( 6500 6500 7500 7000 6500 6500 7000 7000 7000 6500 7000 7500 7500 7500 7000 7000 7000 7500 7500 7000 10500 11000 11000 11000 10500 10000 10500 10500 11000 10000 10500 11000 11500 11000 10500 10000 10500 10500 7500 10000 5500 8000 7000 6000 5000 5500 8000 8500 7500 7500 7500 7500 8000 7500 7500 7500 8000 8000 8000 7500 7500 7500 7500 5000 7000 7000 7500 7500 7500 7000 7000 7500 7500 5500 7000 7000 7500 7500 7500 7000 7000 7500 10000 10500 11000 10500 10000 9500 10000 10000 10000 9500 9500 10000 10500 10500 9500 9500 9500 10000 10000 9500 9500 10000 10000 10000 9500 7500 9500 10000 10000 9000 9000 9500 10000 9500 9500 9500 8000 9500 10000 9000 9500 10000 8000 9500 9500 9500 10000 10000 10500 9500 9500 10000 10000 10000 9500 9500 7000 10000 10000 9500 9500 15000 15000 14500 14500 13000 15000 11000 15000 14500 14500 8000 8000 8000 8000 7500 8000 8000 8000 8000 7500 9500 12000 12000 12000 12000 12000 8500 12000 12000 12000 11500 10500 11000 11000 11000 10500 10500 10500 11000 11000 10500 11500 11500 12000 11500 11500 11500 11500 11500 11500 11500 10500 10500 11000 10500 10500 10000 10500 10500 10500 10000 11500 6500 6500 6500 6500 6500 6500 6500 6500 6500 6500 8000 6500 8000 7500 7500 8000 8000 8000 8000 7500 7000 6500 6500 6500 6500 6500 7000 7000 6500 6500 8000 8000 7500 7500 7500 8000 8000 8000 7500 7500 9500 7500 7000 7500 7500 7500 7500 7500 7500 7500 7000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8500 8000 8500 8500 8500 8000 7500 9000 9000 8500 8500 8500 9000 9000 9000 8500 8500 7000 7000 7000 6500 6500 7000 7000 7000 6500 6500 6500 6500 6500 6500 6500 6500 6500 6500 6500 6500 7000 7000 6500 6500 6500 6500 7000 6500 6500 6500 8500 7500 8000 8000 8000 8000 7500 8000 8000 8000 7500 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10500 10500 10500 10000 10000 10000 9500 10500 10000 10500 10500 10500 10500 10500 10500 10000 10500 10500 10000 7500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8000 8000 8000 8000 8000 7500 8000 8000 8000 7500 8000 8000 8000 8000 8000 8000 7500 8000 8000 7500 8000 8000 8000 8000 8000 8000 8000 8000 8000 7500 8000 8000 8000 8000 8000 8000 8000 7500 8000 8000 8000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8000 8000 8000 8000 8000 8000 8000 8000 8000 7500 8000 8000 8000 8000 8000 8000 7500 8000 8000 7500 8000 8000 8500 8000 8000 8000 8000 8000 8000 8000 8000 8000 8000 8000 7500 7500 7500 7500 8000 7500 7500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8000 8000 8500 8000 8000 8000 8000 8000 8000 8000 8000 8000 8000 8000 8000 7500 7000 8000 8000 7500 8000 7500 8000 8000 8000 7000 8000 7000 8000 8000 8000 7500 8500 8000 8000 10500 6500 8000 8500 11000 7500 8000 8000 8000 7500 7500 8000 8000 8000 8000 7500 8000 8000 7500 7500 7500 8000 8000 8000 7500 7500 8000 8000 8000 8000 7500 8000 8000 8000 8000 7500 8000 8000 7500 7500 7500 8000 8000 8000 7500 7500 7500 9000 9500 9500 8000 9000 9000 9000 9000 9000 9000 9500 10000 10000 10000 9500 9500 9500 9500 10000 9500 9000 9500 9500 9500 9000 9000 9000 9500 9000 9000 9500 10000 10000 10000 9500 9500 9500 9500 9500 8500 9000 8500 8500 8500 8500 8000 8500 8500 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8500 8500 9000 8500 8500 8500 9000 8500 8500 8500 8500 8500 8500 8500 8500 8000 8000 8500 8500 9000 8500 8500 8500 8500 8500 8500 8500 8500 8500 9000 8500 8500 8500 8500 9000 8500 8500 8500 8500 9000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 9000 8000 9000 8500 8500 9000 9000 9000 8500 8500 9000 9000 9000 8500 8500 9000 9000 8500 8500 8500 8500 9000 8500 8500 8500 8500 8500 8500 8500 8000 8000 8500 8500 8500 8500 8500 8500 8500 7500 8500 8500 8500 8500 8500 8500 8000 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 9000 8500 8500 8500 8500 8500 8500 8000 8000 9000 8500 8500 8500 8500 8500 9000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 9000 9000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 9000 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8000 8000 8000 8500 8500 8000 8500 8500 8500 8000 8000 8500 8500 8500 8500 8500 8000 8500 9000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8000 8000 8500 8500 8500 8500 8000 8500 8500 8500 8500 8000 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8000 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8000 8500 8500 8500 8000 8000 8500 8500 8500 8000 8000 8500 8500 8500 8000 8000 8000 8000 8500 8500 8500 8000 8000 8500 8500 8500 8000 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8500 8000 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 9000 9000 9000 8500 8500 8500 8500 8500 8500 8500 8500 8500 9000 8500 8500 8500 8500 9000 8500 8500 8500 9000 8500 8500 8500 8500 8000 8000 8500 8500 8000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 8500 8500 8500 8000 8000 8500 8500 8000 8000 9000 8500 8500 8500 8500 8500 8500 8500 8500 8500 9000 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8000 8500 9000 9000 8500 8500 8000 8500 8500 9000 9000 8500 8500 8500 9000 8500 8500 8500 8500 9000 9000 8500 8500 8500 8500 9000 8500 8500 8500 8500 8500 8500 8000 8500 9000 9000 8500 8500 8500 9000 6500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 8500 9000 8500 8500 8000 8500 9000 9000 8500 8500 8500 8500 8500 8500 8500 9000 9000 8500 8500 9000 8500 9000 9000 8500 8500 8500 8500 9000 8500 8000 8500 12000 8500 8000 8500 8000 )
sq2_bias=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_fb=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_fb_set=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sa_bias=( 17000 17500 17500 17000 17500 17500 17000 17000 15500 15500 15500 15500 15500 15500 16000 15500 15500 16000 16000 16000 17000 16000 15500 16000 17000 17000 17000 17000 17000 17000 16500 17000 )
sa_fb=( 4890 4548 3871 4078 3739 4612 4103 4062 4634 8402 4552 8402 4585 8402 4394 4464 4360 4352 4438 4468 4207 4287 4539 4345 4348 4216 4531 4257 4301 4290 4433 4262 )
sa_offset=( 8500 8750 8750 8500 8750 8750 8500 8500 7750 7750 7750 7750 7750 7750 8000 7750 7750 8000 8000 8000 8500 8000 7750 8000 8500 8500 8500 8500 8500 8500 8250 8500 )
sa_fb_set=( 4890 4811 4716 4785 4862 4906 4807 4837 4833 4885 4815 4667 4616 4645 4811 4809 4841 4709 4688 4797 3942 3858 3793 3794 3881 4027 3930 3915 3850 3985 4008 3949 3845 3925 4005 4137 4031 4057 4413 4116 5082 4548 4593 4816 4922 4881 4518 4476 4369 4674 4658 4618 4571 4661 4631 4675 4581 4587 4547 4623 4674 4627 4605 5068 4728 4723 4647 4601 4618 4735 4734 4622 4657 4912 4741 4754 4642 4670 4693 4746 4779 4661 3871 3803 3690 3766 3869 3944 3863 3859 3883 3980 3900 3814 3711 3693 3878 3934 3909 3838 3811 3926 3953 3815 3806 3797 3905 4082 3919 3826 3840 3967 4056 3954 3844 3896 3943 3959 4119 3916 3838 3988 3963 4078 4451 4174 4240 4180 4104 4045 2338 4227 4193 4100 4117 4133 4180 4226 4580 4085 4070 4199 4178 3259 3238 3281 3351 3445 3243 3658 3217 3363 3277 4821 4833 4812 4848 4967 4827 4821 4874 4883 4967 4260 3739 3673 3627 3650 3739 3844 3750 3714 3686 3808 3894 3750 3729 3724 3894 3954 3949 3808 3793 3922 3846 3780 3695 3737 3795 3876 3848 3795 3792 3860 3969 3922 3809 3920 3955 4082 3978 4018 3942 4028 3782 4612 4626 4638 4711 4699 4616 4590 4599 4692 4702 3905 4240 3932 3988 4010 3889 3906 3851 3915 4021 4571 4619 4615 4681 4635 4635 4511 4559 4656 4653 3871 3862 3975 3989 3975 3873 3865 3912 3993 4027 4485 4103 4077 3993 4007 4078 4139 4091 4101 4090 4228 3894 3813 3803 3775 3862 3954 3900 3883 3818 3932 3966 3899 3866 3836 3923 3990 3973 3905 3887 3994 4003 3939 3844 3912 3957 4046 3998 3980 3947 4095 4120 4062 4044 4167 4183 4165 4052 4026 4069 4138 4197 4831 4810 4798 4936 4933 4826 4791 4825 4897 4928 4933 4888 4932 4967 4889 4888 4872 4896 4914 4977 4825 4851 4929 4948 4940 4897 4826 4903 4925 4953 4186 4634 4495 4472 4488 4515 4607 4521 4560 4502 4621 3920 3792 3809 3778 3800 3905 3855 3835 3802 3914 3850 3771 3697 3701 3812 3895 3892 3921 3770 3900 3801 3679 3656 3668 3760 3817 3854 3735 3766 3855 4643 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 4552 4481 4421 4453 4538 4595 4508 4528 4484 4605 4530 4463 4345 4405 4534 4554 4585 4479 4453 4650 4471 4442 4382 4343 4438 4495 4510 4408 4434 4555 4577 4505 4458 4517 4567 4548 4549 4600 4518 4594 4559 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 4585 4507 4453 4484 4560 4569 4538 4523 4541 4685 4595 4521 4441 4406 4556 4602 4695 4549 4485 4695 4569 4491 4376 4414 4496 4601 4547 4470 4488 4526 4565 4517 4448 4558 4660 4677 4654 4628 4530 4662 4647 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 4394 4345 4257 4309 4417 4451 4426 4424 4396 4491 4436 4361 4292 4234 4393 4494 4656 4316 4367 4541 4472 4440 4290 4312 4348 4673 4378 4580 4345 4394 4375 4433 4222 4293 4370 4177 4651 4283 4278 4138 4486 4464 4497 4545 4671 4635 4455 4473 4503 4586 4639 4513 4538 4587 4670 4620 4525 4517 4496 4623 4616 4485 4524 4566 4589 4611 4459 4445 4403 4587 4662 4522 4515 4612 4637 4638 4530 4502 4498 4664 4663 4641 4360 4273 4207 4303 4328 4376 4324 4374 4361 4372 4530 4386 4367 4371 4572 4605 4567 4497 4428 4578 4400 4255 4250 4233 4350 4422 4410 4336 4345 4425 4542 4449 4368 4431 4533 4603 4584 4589 4610 4877 4396 4352 4402 4408 4500 4499 4358 4336 4392 4506 4547 4338 4345 4409 4430 4484 4388 4361 4345 4439 4514 4361 4330 4385 4471 4364 4363 4240 4341 4458 4406 4358 4377 4418 4493 4469 4423 4415 4445 4527 4610 4584 4438 4335 4268 4340 4424 4460 4366 4380 4404 4481 4434 4307 4220 4228 4451 4435 4418 4288 4322 4429 4488 4379 4294 4338 4371 4453 4390 4388 4366 4419 4460 4390 4348 4461 4518 4579 4512 4545 4478 4561 4515 4468 4448 4482 4572 4493 4462 4383 4440 4529 4568 4338 4437 4359 4394 4457 4372 4350 4349 4438 4492 4345 4303 4372 4462 4390 4305 4239 4369 4446 4452 4422 4367 4418 4521 4502 4430 4458 4479 4490 4617 4611 4207 4118 4099 4105 4109 4183 4153 4351 4102 4231 4212 4051 4053 3994 4181 4243 4219 4141 4079 4203 4220 4100 4035 4042 4139 4208 4101 4108 4108 4208 4165 4117 3975 4139 4153 4264 4212 4224 4189 4308 4300 4287 4371 4373 4485 4423 4347 4282 4371 4418 4430 4356 4378 4322 4432 4438 4359 4348 4332 4421 4467 4391 4355 4381 4466 4381 4329 4286 4364 4439 4422 4364 4394 4395 4512 4504 4445 4409 4475 4566 4551 4477 4539 4434 4419 4436 4508 4553 4500 4472 4467 4572 4491 4382 4380 4338 4557 4568 4567 4487 4465 4576 4601 4480 4382 4445 4470 4603 4516 4467 4480 4619 4623 4527 4479 4568 4654 4706 4687 4634 4615 4717 4621 4345 4409 4477 4571 4483 4404 4278 4330 4485 4500 4407 4370 4380 4452 4473 4400 4392 4406 4453 4518 4421 4435 4446 4526 4458 4418 4370 4373 4507 4584 4404 4410 4460 4502 4555 4410 4447 4430 4514 4592 4506 4348 4236 4240 4285 4339 4357 4328 4290 4294 4378 4393 4254 4220 4243 4332 4385 4415 4319 4267 4451 4406 4285 4235 4243 4311 4392 4313 4377 4339 4473 4355 4298 4220 4313 4335 4386 4374 4355 4355 4422 4448 4216 4243 4283 4352 4302 4219 4147 4250 4338 4375 4164 4221 4226 4223 4265 4239 4181 4192 4251 4313 4308 4315 4329 4418 4344 4289 4295 4273 4391 4410 4259 4285 4265 4362 4392 4351 4344 4419 4478 4481 4426 4531 4428 4383 4396 4523 4550 4428 4459 4420 4519 4418 4303 4382 4221 4417 4433 4426 4349 4327 4475 4544 4376 4353 4358 4390 4503 4417 4403 4411 4489 4408 4367 4273 4337 4435 4580 4446 4439 4458 4359 4592 4257 4275 4317 4395 4361 4316 4248 4258 4394 4417 4287 4292 4302 4299 4345 4286 4267 4250 4384 4427 4249 4258 4265 4334 4296 4242 4120 4199 4324 4334 4154 4182 4223 4345 4325 4284 4278 4334 4346 4376 4414 4301 4164 4202 4267 4328 4361 4261 4249 4282 4352 4288 4229 4136 4131 4320 4415 4303 4214 4243 4384 4361 4276 4204 4206 4318 4388 4342 4270 4268 4345 4420 4315 4246 4400 4377 4418 4488 4424 4337 4477 4366 4290 4363 4383 4481 4436 4318 4288 4330 4436 4469 4303 4337 4355 4406 4469 4357 4404 4327 4387 4457 4343 4285 4378 4388 4370 4312 4285 4288 4398 4395 4324 4382 4389 4489 4481 4427 4334 4401 4512 4545 4543 4433 4379 4294 4320 4446 4432 4397 4348 4371 4484 4364 4287 4210 4178 4411 4372 4416 4361 4243 4412 4499 4319 4307 4303 4357 4498 4366 4335 4321 4426 4465 4369 4280 4789 4453 4530 4510 4493 4480 4537 4516 4262 4294 4318 4414 4364 4289 4178 4281 4389 4446 4308 4263 4263 4374 4360 4281 4280 4290 4341 4400 4193 4267 4285 4378 4253 4240 4193 4229 4317 4347 4325 4364 4383 4422 4452 4364 4241 4411 4440 4488 4449 )
config_adc_offset_all=1
adc_offset_c=( 2047 23 -3916 -12122 3031 -3633 285 -698 -2049 0 -6784 0 -4154 0 -1078 -16067 -695 2204 1034 6280 -900 2803 16 3328 -7939 -11529 -13455 -8928 -13160 -18579 -14988 -14612 )
adc_offset_cr=( 74 -210 42 -231 -228 135 -213 -352 -393 471 -215 -76 62 -158 -210 -236 -141 -397 -235 -232 -133 14 -14 -215 -50 -218 -310 -318 -123 -149 25 -382 -101 -273 -162 -350 -353 -206 853 -133 -848 -711 -408 -1393 -526 -872 -673 -733 -740 -840 -761 -675 -686 -836 -653 -783 -800 -822 -796 -671 -795 -608 -553 -789 -727 -815 -757 -647 -766 -614 -764 -685 -712 -1219 -567 -725 -643 -813 -747 -812 -790 -618 -1095 -1213 -1101 -1073 -1148 -1134 -1120 -1145 -1175 -1209 -1074 -1131 -1139 -1087 -1022 -1183 -1124 -1237 -1150 -1216 -1188 -1118 -1065 -1164 -1186 -1273 -1203 -1051 -1153 -1182 -1264 -1195 -1063 -1125 -1166 -1186 -1689 -854 -1105 -952 -1219 -1892 -504 -1869 -1852 -1864 -1983 -1871 -1287 -1944 -1805 -1963 -1973 -1964 -1878 -1940 -1364 -1861 -1875 -1936 -1824 -2037 -1999 -2022 -2032 -2510 -1973 -1773 -1992 -2068 -1984 -1803 -1844 -1758 -1680 -1850 -1760 -1756 -1803 -1802 -1699 -1950 -628 -597 -633 -592 -760 -754 -753 -717 -626 -629 -510 -386 -538 -525 -445 -589 -572 -574 -608 -515 -552 -637 -559 -558 -563 -535 -665 -577 -645 -463 -534 -529 -514 -304 -533 -597 -505 -497 -483 -317 -569 -1135 -1034 -1111 -1135 -1214 -1239 -1018 -1137 -1096 -1077 -1204 -875 -1372 -1263 -1326 -1368 -1415 -1275 -1187 -1374 -1031 -1192 -1098 -1195 -1244 -1193 -1220 -1246 -1191 -1097 -1317 -1176 -1324 -1230 -1220 -1247 -1258 -891 -1327 -1019 -699 -1074 -677 -954 -893 -876 -966 -877 -1031 -1013 -979 -933 -1011 -1110 -1068 -831 -1087 -897 -1119 -1020 -965 -667 -1091 -1131 -962 -1030 -882 -1100 -1018 -992 -775 -1071 -1095 -964 -986 -910 -887 -926 -639 -994 -628 -1000 -703 -456 -870 -666 -843 -784 -726 -811 -822 -974 -863 -837 -780 -965 -892 -892 -786 -907 -815 -850 -858 -842 -929 -866 -793 -799 -887 -811 -614 -936 -714 -755 -887 -831 -823 -419 -760 -567 -799 -588 -732 -1207 -1181 -1255 -1211 -1107 -1094 -1074 -1244 -1091 -1062 -1271 -1211 -1308 -1253 -1195 -1196 -1159 -1277 -1237 -1284 -1298 -1332 -1266 -1304 -1295 -1330 -1321 -1122 -1303 -1303 -1294 -1285 -1276 -1305 -1224 -1297 -1359 -1208 -1313 -1258 -1107 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -1655 -1614 -1590 -1573 -1603 -1531 -1544 -1640 -1515 -1501 -1500 -1612 -1481 -1603 -1603 -1525 -1308 -1544 -1561 -1604 -1449 -1649 -1589 -1509 -1562 -1498 -1672 -1473 -1563 -1474 -1550 -1524 -1565 -1576 -1599 -1473 -1522 -1308 -1548 -1523 -1559 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -1407 -1310 -1349 -1321 -1368 -1295 -1342 -1338 -1334 -1432 -1332 -1431 -1374 -1261 -1379 -1382 -1970 -1445 -1285 -1444 -1340 -1420 -1348 -1311 -1401 -1435 -1468 -1381 -1423 -1277 -1351 -1368 -1320 -1425 -1425 -1400 -1414 -1149 -1283 -1247 -1285 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -875 -1011 -1020 -935 -1035 -1035 -991 -1052 -951 -1012 -978 -1082 -1007 -836 -853 -781 -1429 -849 -985 -953 -978 -1353 -801 -924 -813 -1040 -756 -1273 -808 -658 -934 -724 -869 -830 -922 -443 -439 -633 -789 -289 -752 -2397 -2420 -2454 -2439 -2500 -2414 -2469 -2483 -2462 -2448 -2424 -2423 -2422 -2477 -2391 -2466 -2378 -2477 -2425 -2345 -2351 -2467 -2488 -2434 -2240 -2317 -2319 -2189 -2436 -2256 -2413 -2373 -2419 -2250 -2423 -2429 -2395 -2202 -2487 -2377 -2384 -861 -1021 -910 -1045 -791 -572 -902 -1028 -861 -491 -945 -959 -1042 -1015 -1058 -1054 -905 -953 -985 -1028 -795 -875 -1021 -894 -975 -879 -1036 -1038 -942 -911 -1011 -972 -1022 -963 -973 -1020 -1013 -591 -960 -851 -873 -225 -23 -754 -702 -676 -706 -748 -803 -546 -721 -689 -613 -843 -781 -786 -827 -723 -679 -779 -541 -658 -631 -717 -751 -678 -746 -746 -703 -545 -686 -629 -571 -795 -366 -632 -743 -699 -623 -852 -618 -652 -660 -919 -885 -842 -928 -899 -862 -846 -1004 -978 -977 -880 -906 -893 -1066 -873 -770 -839 -942 -854 -945 -740 -869 -1001 -929 -880 -824 -1012 -869 -909 -796 -900 -886 -930 -916 -864 -852 -1018 -915 -763 -959 -418 -370 -309 -423 -246 -413 -290 -288 -354 -238 -360 -788 -370 -270 -330 -462 -369 -419 -410 -473 -352 -257 -471 -471 -365 -430 -245 -341 -395 -473 -435 -277 -308 -440 -344 -185 -446 -434 -318 -350 -159 -988 -1151 -1175 -1125 -1016 -1023 -1168 -1820 -1004 -1135 -1140 -1085 -1199 -1070 -924 -1063 -1181 -1172 -1138 -1067 -1133 -1110 -1044 -1058 -1183 -1124 -900 -886 -957 -833 -1083 -1123 -1092 -1086 -1016 -1181 -1062 -1105 -1155 -1031 -1025 -467 -918 -764 -848 -782 -854 -897 -845 -586 -711 -737 -798 -515 -801 -688 -716 -732 -699 -789 -774 -798 -656 -688 -798 -715 -767 -841 -837 -724 -703 -684 -691 -666 -727 -775 -743 -705 -818 -789 -696 -773 -928 -1052 -1099 -933 -982 -947 -988 -910 -912 -890 -889 -953 -895 -966 -998 -1023 -903 -1052 -922 -963 -925 -1033 -862 -838 -960 -999 -926 -759 -738 -810 -947 -865 -930 -854 -720 -949 -991 -828 -1047 -943 -987 -582 -416 328 -431 352 -644 -525 -638 -612 -368 -720 -803 -98 -634 -505 -700 -452 -733 -696 -580 -720 -310 -454 -413 -593 -558 -523 -357 -523 -373 -538 -503 -601 -682 -597 -434 -589 -299 -639 89 -309 -1440 -1250 -1395 -1475 -1483 -1292 -1513 -1368 -1479 -1307 -1485 -1062 -1380 -1526 -1407 -1479 -1491 -1418 -1378 -1481 -1321 -1060 -1414 -1284 -1460 -1425 -1223 -1079 -1397 -1444 -1319 -1122 -1285 -1384 -810 -1332 -1428 -1175 -1460 -1427 -1387 -1743 -1748 -1793 -1675 -1758 -1743 -1660 -1781 -1813 -1760 -1678 -1705 -1857 -1743 -1480 -1858 -1578 -1835 -1846 -1829 -1783 -1777 -1796 -1770 -1685 -1772 -1857 -1754 -1320 -1789 -1808 -1725 -1669 -1699 -1707 -1796 -1841 -1877 -1887 -1786 -1757 -1851 -1911 -1972 -1939 -1932 -2003 -1866 -2024 -1865 -1809 -1999 -1998 -2411 -1915 -1966 -1972 -1772 -1971 -1943 -1890 -1921 -1909 -1869 -1959 -1892 -1903 -1644 -1866 -1693 -1903 -1884 -1933 -1954 -1833 -1675 -2065 -1898 -1688 -2063 -1706 -1951 -1386 -1450 -1426 -1205 -1482 -1320 -1498 -1376 -1570 -1440 -1514 -1432 -1508 -1391 -1345 -1399 -1017 -1432 -1417 -1395 -1280 -1436 -1383 -1414 -1525 -1423 -1121 -1335 -1442 -1303 -1331 -1466 -1508 -1442 -1431 -1513 -1485 -1292 -1448 -1375 -1377 -1672 -1893 -1822 -1498 -1857 -1903 -594 -1797 -1865 -1809 -1835 -1604 -1591 -1826 -1777 -1879 -1686 -1879 -1650 -1856 -1658 -1817 -1728 -1798 -1958 -1840 -1917 -1821 -1654 -1832 -1872 -1789 -1864 -2061 -1824 -1641 -1897 -1866 -1826 -1713 -1733 -1990 -2133 -2286 -1618 -2165 -1711 -2220 -2134 -2024 -2250 -2262 -1932 -1904 -2303 -1778 -2314 -2098 -2180 -2104 -2025 -2215 -2199 -1789 -2018 -2281 -2188 -1947 -1939 -1851 -2014 -2170 -2163 -2162 -2190 -2195 -1976 -2166 -2031 -2381 -2061 -2245 -1961 -1957 -2061 -1991 -2103 -1809 -1937 -2105 -1906 -1943 -1991 -2026 -2042 -2074 -1947 -2022 -1994 -2153 -1615 -2013 -1794 -1967 -1972 -1844 -1981 -1850 -1902 -1997 -1841 -1866 -2075 -2030 -2023 -2222 -1999 -1992 -2145 -1842 -2211 -1993 -1936 -1962 -1826 -2030 -1983 -2046 -1916 -1902 -2017 -1980 -1990 -2125 -1761 -1846 -2063 -1938 -2046 -1679 -2039 -1934 -1964 -1906 -2069 -1661 -1910 -2009 -1937 -2008 -1871 -1727 -2021 -1908 -1911 -1998 -1889 -1798 -1965 -2027 -1856 -1928 -1815 -1911 )
# END mas_param output
#START config_create.bash

#initialise environment
if [ ! -x ${MAS_VAR:=/usr/mce/bin/mas_var} ]; then
  echo "Cannot find mas_var.  Set MAS_VAR to the full path to the mas_var binary."
  exit 1
else
  eval $(${MAS_VAR} -s)
fi

create_start=`print_ctime`

mce_script=${MAS_TEMP}/`whoami`_config_mce${MAS_MCE_DEV}.scr

# Remove existing script
[ -e "$mce_script" ] && rm -f "$mce_script"

# New file, group rw
umask 002
touch "$mce_script"

# For raveled 2d arrays
AROWS=${array_width}

# Choose sync box parameters:
if [ "$config_sync" != "0" ]; then
    select_clk=$sb1_select_clk
    use_sync=$sb1_use_sync
    use_dv=$sb1_use_dv
else
    select_clk=$sb0_select_clk
    use_sync=$sb0_use_sync
    use_dv=$sb0_use_dv
fi

# Calculate the corrected adc offset.
adc_offset_divided=( adc_offset_c )
for i in `seq 0 $(( ${#adc_offset_c[@]} - 1))` ; do
    adc_offset_divided[$i]=$(( ${adc_offset_c[$i]} / $sample_num ))
done

# Perhaps you don't know about mux11d -- default to off
hardware_mux11d=${hardware_mux11d:-0}

# Allow some flexibility in hardware_fast_sq2 vs. hardware_bac
if [ "$hardware_fast_sq2" == "" ]; then
    hardware_fast_sq2=${hardware_bac}
fi

#----------------------------------------------
# sys commands
#----------------------------------------------
echo "wb sys row_len $row_len" >> $mce_script
echo "wb sys num_rows $num_rows" >> $mce_script

if [ "$hardware_rect" == "0" ]; then
    # Pre-v5 firmware
    echo "wb cc num_rows_reported $num_rows_reported" >> $mce_script
else
    # v5 and later (rectangle mode)
    echo "wb cc num_rows_reported $num_rows_reported" >> $mce_script
    echo "wb cc num_cols_reported 8" >> $mce_script
    echo "wb rca num_rows_reported $num_rows_reported" >> $mce_script
    echo "wb rca num_cols_reported 8" >> $mce_script
    echo "wb rca readout_row_index 0" >> $mce_script
    echo "wb rca readout_col_index 0" >> $mce_script
fi

#----------------------------------------------
# Clock Card
#----------------------------------------------
echo "wb cc data_rate $data_rate" >> $mce_script
echo "wb cc select_clk $select_clk" >> $mce_script
echo "wb cc use_dv $use_dv" >> $mce_script
echo "wb cc use_sync $use_sync" >> $mce_script
echo "wb cc ret_dat_s 1 1" >> $mce_script

if [ "$hardware_rect" != "0" ]; then
    # Assemble bits for choosing readout cards to report data
    bit=0x20  # RC1
    rc_bits=0
    for i in `seq 0 3`; do
        if [ "${hardware_rc_data[$i]}" != "0" ]; then
            rc_bits=$(( $rc_bits + $bit ))
        fi
        bit=$(( $bit / 2 ))
    done
    echo "wb cc rcs_to_report_data $rc_bits" >> $mce_script
fi

# Write cc user_word based on array_id - this shows up in frame data
user_word=0
if [ -e "${MAS_DATA_ROOT}/array_id" ]; then
    array_id=`cat ${MAS_DATA_ROOT}/array_id`
    user_word=`awk "($$1 == \"$array_id\") {print $$2}" $MAS_CONFIG/array_list`
    [ "$user_word" == "" ] && user_word=0
fi
echo "wb cc user_word $user_word" >> $mce_script


#----------------------------------------------
# Readout Cards
#----------------------------------------------
## Mask out SA and SQ2 bias for bad columns.
vals=${sa_bias[@]}
mask=${columns_off[@]}
sa_bias=( `mask_values "$vals" "$mask" 1 0` )

vals=${sq2_bias[@]}
mask=${columns_off[@]}
sq2_bias=( `mask_values "$vals" "$mask" 1 0` )

for rc in 1 2 3 4; do
    min_flux_quantum=999999
    max_gaini=0
    [ "${config_rc[$(( $rc - 1 ))]}" == "0" ] && continue
    [ "${hardware_rc[$(( $rc - 1 ))]}" == "0" ] && continue

    ch_ofs=$(( ($rc-1)*8 ))
#    echo "Readout card $rc: time=" `print_elapsed $create_start` >&2

    echo "wb rc$rc readout_row_index $readout_row_index" >> $mce_script
    echo "wb rc$rc readout_col_index 0" >> $mce_script
    echo "wb rc$rc sample_dly   $sample_dly" >> $mce_script
    echo "wb rc$rc sample_num   $sample_num" >> $mce_script
    echo "wb rc$rc fb_dly       $fb_dly" >> $mce_script
    echo "wb rc$rc fb_const    " `repeat_string $fb_const 8` >> $mce_script
    echo "wb rc$rc data_mode    $data_mode" >> $mce_script
    echo "wb rc$rc sa_bias      ${sa_bias[@]:$ch_ofs:8}" >> $mce_script
    echo "wb rc$rc offset       ${sa_offset[@]:$ch_ofs:8}" >> $mce_script

    # Don't auto-servo columns flagged in "columns_off"
    if [ "$servo_mode" == "3" ]; then
        echo -n "wb rc$rc servo_mode  "
        for c in `seq 0 7`; do
            chan=$(( $c + $ch_ofs ))
            if [ "${columns_off[$chan]}" == "1" ]; then
                echo -n " 1"
            else
                echo -n " 3"
            fi
        done
        echo
    else
        # Servo modes other than 3 are not affected by columns_off
        echo "wb rc$rc servo_mode   " `repeat_string $servo_mode 8`
    fi >> $mce_script

    # Servo parameters, including dead and frail detector turn-offs
    for c in `seq 0 7`; do
        chan=$(( $c + $ch_ofs ))
        dead_ofs=$(( ($c + $ch_ofs)*$array_width ))

        if [ "${columns_off[$chan]}" != "1" -a $chan -lt $num_rows ]; then
            if [ ${servo_i[$chan]} -gt $max_gaini ]; then
                max_gaini=${servo_i[$chan]}
            fi
            if [ $((-1 * ${servo_i[$chan]})) -gt $max_gaini ]; then
                max_gaini=$((-1 * ${servo_i[$chan]}))
            fi
        fi

        p_terms=( `repeat_string ${servo_p[$chan]} $array_width` )
        i_terms=( `repeat_string ${servo_i[$chan]} $array_width` )
        d_terms=( `repeat_string ${servo_d[$chan]} $array_width` )

        if [ "$config_frail_tes" == "0" ]; then
            for r in `seq 0 $(( $array_width - 1 ))`; do
                if [ "${frail_detectors[$(( $dead_ofs + $r ))]}" != "0" ]; then
                    p_terms[$r]=$frail_servo_p
                    i_terms[$r]=$frail_servo_i
                    d_terms[$r]=$frail_servo_d
                fi
            done
        fi

        if [ "$config_dead_tes" == "0" ]; then
            for r in `seq 0 $(( $array_width - 1 ))`; do
                if [ "${dead_detectors[$(( $dead_ofs + $r ))]}" != "0" ]; then
                    p_terms[$r]=0
                    i_terms[$r]=0
                    d_terms[$r]=0
                fi
            done
        fi

        echo "wb rc$rc gainp$c ${p_terms[@]}" >> $mce_script
        echo "wb rc$rc gaini$c ${i_terms[@]}" >> $mce_script
        echo "wb rc$rc gaind$c ${d_terms[@]}" >> $mce_script
    done

    # Flux jump quanta, and enable/disable
    for c in `seq 0 7`; do
        chan=$(( $c +  $ch_ofs ))
        r_off=$(( $array_width * $chan ))

        if [ "${config_flux_quanta_all}" != "0" ]; then
	    if [ "$config_dead_tes" == "0" ]; then
		for r in `seq 0 $(( $num_rows - 1 ))`; do
		    if [ "${dead_detectors[$(( $r_off + $r ))]}" == "0" \
			-a ${flux_quanta_all[$(( $r_off + $r ))]} -lt $min_flux_quantum \
			-a ${flux_quanta_all[$(( $r_off + $r ))]} -gt 0 ]; then
			min_flux_quantum=${flux_quanta_all[$(( $r_off + $r ))]}
		    fi
		done
	    else
		min_flux_quantum=`find_min_positive ${min_flux_quantum} ${flux_quanta_all[@]:$r_off:$num_rows}`
	    fi
            echo "wb rc$rc flx_quanta$c ${flux_quanta_all[@]:$r_off:$num_rows}" >> $mce_script
        else
            if [ ${flux_quanta[$chan]} -lt ${min_flux_quantum} \
              -a ${flux_quanta[$chan]} -gt 0 ]; then
                min_flux_quantum=${flux_quanta[$chan]}
            fi
            repeat_string "${flux_quanta[$chan]}" $AROWS "wb rc$rc flx_quanta$c" >> $mce_script
        fi

        if [ "${config_adc_offset_all}" != "0" ]; then
            echo "wb rc$rc adc_offset$c ${adc_offset_cr[@]:$r_off:$array_width}" >> $mce_script
        else
            repeat_string "${adc_offset_divided[$chan]}" $AROWS "wb rc$rc adc_offset$c" >> $mce_script
        fi
    done

    # Readout filter
    if [ "$config_filter" == "1" ]; then
        echo "wb rca fltr_coeff ${filter_params[@]}" >> $mce_script
    fi

    echo "wb rc$rc en_fb_jump $flux_jumping" >> $mce_script

    # integral clamp

    if [ "$config_integral_clamp" == "1" ]; then
        # don't divide by zero
        if [ $max_gaini == "0" ]; then
            integral_clamp=0
        elif [ $flux_jumping == "1" ]; then
            integral_clamp=$(printf %i $(echo "$integral_clamp_factor * 127 * 4096 * $min_flux_quantum / $max_gaini" | bc))
        else
            integral_clamp=$(printf %i $(echo "$integral_clamp_factor * 8192 * 4096 / $max_gaini" | bc))
        fi
        # don't overflow
        if [ $integral_clamp -gt 2147483647 ]; then
          integral_clamp=2147483647
        fi
        echo "wb rc$rc integral_clamp $integral_clamp" >> $mce_script
    fi
done

# echo "Other cards: time=" `print_elapsed $create_start` >&2

#----------------------------------------------
# Address Card
#----------------------------------------------

# I wanted to put this below next to ac enbl_mux, but a cryptic
# comment in the bc section of this script makes it sound like enbl
# needs to be sent to the bc before sending the values for the DACs.
# So putting it here, in advance.
if [ "$mux11d_hybrid_row_select" == "1" ]; then
    for i in `seq 0 $((${#mux11d_row_select_cards[@]}-1))`; do
	card=${mux11d_row_select_cards[$i]}
	r0=${mux11d_row_select_cards_row0[$i]}
	for j in `seq 3`; do
	    if [ "$card" == "bc$j" ]; then
		for k in `seq 0 $((${#mux11d_mux_order[@]}-1))`; do
		    rsmr0=$((${mux11d_mux_order[k]}-$r0))
		    if [ \( "${rsmr0}" -ge "0" \) -a \( "${rsmr0}" -lt "32" \) ]; then
			echo "wra ${card} enbl_mux ${rsmr0} 1" >> $mce_script
		    fi
		done
	    fi
	done
    done
fi


if [ "$hardware_mux11d" == "0" ]; then
    echo "wb ac on_bias   ${sq1_bias[@]}" >> $mce_script
    echo "wb ac off_bias  ${sq1_bias_off[@]}" >> $mce_script
else
    if [ "$mux11d_hybrid_row_select" == "1" ]; then
	## Hybridized muxing - prep ac on_bias/off_bias lines
	if [ ${#mux11d_row_select_cards[@]} != ${#mux11d_row_select_cards_row0[@]} ]; then
	    # Nonsensical configuration.  Give up...
	    echo "Length of mux11d_row_select_cards=(${mux11d_row_select_cards[@]}) and mux11d_row_select_cards_row0=(${#mux11d_row_select_cards_row0[@]}) arrays not equal.  Abort!"
	    exit 1
	else 
	    # Loop through the MCE Cards we're hybridizing the row
	    # selects over and deal with them one at a time.  Really
	    # only two cases; AC or BC.
            for i in `seq 0 $((${#mux11d_row_select_cards[@]}-1))`; do
		card=${mux11d_row_select_cards[$i]}
		r0=${mux11d_row_select_cards_row0[$i]}

		## For now, will assume user has correctly spaced r0
		## for the cards; ie, AC has 41 or more indices
		## between it and the r0 for the next card, and BCs
		## have 32 or more indicies between them and the r0
		## for the next card.
		
		#
		# Configure AC-driven row selects
		if [ "$card" == "ac" ]; then
		    # These will be written to ac on_bias and ac
		    # off_bias
		    hybrid_ac_on_bias=(`repeat_string 0 41`)
		    hybrid_ac_off_bias=(`repeat_string 0 41`)
		    for k in `seq 0 $((${#mux11d_mux_order[@]}-1))`; do

			# don't go higher than # of rows
                        if [ $k -gt $(( $num_rows - 1 )) ]; then
                            continue
                        fi

			rsmr0=$((${mux11d_mux_order[k]}-$r0))
			if [ \( "${rsmr0}" -ge "0" \) -a \( "${rsmr0}" -lt "41" \) ]; then
			    # If there is no row select for this
			    # entry, throw an exception, unless it's
			    # the AC idle row
			    if [ ! "$k" -lt "${#row_select[@]}" ]; then
				if [ "${mux11d_mux_order[k]}" -eq "${mux11d_ac_idle_row}" ]; then
				    continue
				fi
				# Not the AC idle row.  Exception!
				echo "The row_select (size=${#row_select[@]}) and row_deselect (size=${#row_deselect[@]})"
				echo "lists are shorter than the mux11d_mux_order (size=${#mux11d_mux_order[@]}) list in"
				echo "experiment.cfg, and the row with no corresponding select/deselect is *not* the AC"
				echo "idle row.  (k=${k} r0=${r0} rsmr0=${rsmr0} row_select[$k]=${row_select[$k]}"
				echo "row_deselect[$k]=${row_deselect[$k]}).  Abort!"
				exit 1
			    else
				hybrid_ac_on_bias[${rsmr0}]=${row_select[$k]}
				hybrid_ac_off_bias[${rsmr0}]=${row_deselect[$k]}
			    fi
			fi
		    done

		    echo "wb ac on_bias   ${hybrid_ac_on_bias[@]}" >> $mce_script
		    echo "wb ac off_bias  ${hybrid_ac_off_bias[@]}" >> $mce_script
		fi
		# Done configuring AC-driven row selects

		#
		# Configure BC-driven row selects
		for j in `seq 3`; do
		    if [ "$card" == "bc$j" ]; then
			for k in `seq 0 $((${#mux11d_mux_order[@]}-1))`; do
			    rsmr0=$((${mux11d_mux_order[k]}-$r0))
			    if [ \( "${rsmr0}" -ge "0" \) -a \( "${rsmr0}" -lt "32" \) ]; then
				hybrid_bc_fb_col=(`repeat_string ${row_deselect[$k]} $AROWS`)
				hybrid_bc_fb_col[$k]=${row_select[$k]}
				echo "wb bc$j fb_col${rsmr0}   ${hybrid_bc_fb_col[@]}" >> $mce_script
			    fi
			done
		    fi
		done
		# Done configuring BC-driven row selects
		#

	    done
	fi
    else # Just using ac on_bias/off_bias to switch mux11d rows
	# Must take ac row order into account ... row select/deselect
	# are really just synonyms for ac on_bias/off_bias
	for rs in `seq 0 $((${#row_order[@]}-1))`; do
	    echo "wra ac on_bias ${row_order[${rs}]} ${row_select[${rs}]}" >> $mce_script
	    echo "wra ac off_bias ${row_order[${rs}]} ${row_deselect[${rs}]}" >> $mce_script
	done
    fi
fi

echo "wb ac row_dly   $row_dly" >> $mce_script
echo "wb ac row_order ${row_order[@]}" >> $mce_script
echo "wb ac enbl_mux  1" >> $mce_script

# Set the TES biases via the "tes bias" virtual address
if [ "$tes_bias_do_reconfig" != "0" ]; then
    echo "wb tes bias ${tes_bias[@]}" >> $mce_script
fi

#----------------------------------------------
# Bias Cards - use functional mappings!
#----------------------------------------------

# Set enbl_mux before writing per-column values, since DACs need to be
# kicked once after enbl_mux is turned off.

# For biasing address card, set the correct mux_mode and row_order
# But only if we're not mux11d.
if [ "$hardware_mux11d" == "0" ]; then

    if [ "$hardware_fast_sq2" == "1" ]; then
        echo "wb bac row_order ${row_order[@]}" >> $mce_script
        echo "wb bac enbl_mux 2" >> $mce_script
    fi

    # For new bias card in fast_sq2 mode, set enbl_mux for all columns
    if [ "$hardware_fast_sq2" == "2" ]; then
        for rc in 1 2 3 4; do
            [ "${config_rc[$(( $rc - 1 ))]}" == "0" ] && continue
            ch_ofs=$(( ($rc-1)*8 ))
            echo "wra sq2 enbl_mux $ch_ofs `repeat_string $config_fast_sq2 8`" >> $mce_script
        done
    fi
fi

#Still only write the relevant columns depending on readout card configuration
for rc in 1 2 3 4; do
    [ "${config_rc[$(( $rc - 1 ))]}" == "0" ] && continue

    ch_ofs=$(( ($rc-1)*8 ))

    if [ "$hardware_mux11d" == "0" ]; then

        echo "wra sa  fb    $ch_ofs  ${sa_fb[@]:$ch_ofs:8}"
        echo "wra sq2 bias  $ch_ofs  ${sq2_bias[@]:$ch_ofs:8}"

        # SQ2 feedback
        if [ "$config_fast_sq2" == "0" ]; then
            if [ "$hardware_fast_sq2" == "1" ]; then
                # Emulate bias card with a BAC
                for a in `seq 0 7`; do
                    c=$(( $ch_ofs + $a ))
                    repeat_string "${sq2_fb[$c]}" $AROWS "wb bac fb_col$c"
                done
            else
                # People still use bias cards?
                echo "wra sq2 fb    $ch_ofs  ${sq2_fb[@]:$ch_ofs:8}"
            fi
        else
            # BAC and new bias card firmware support sq2 fb_col%
            for a in `seq 0 7`; do
                row_ofs=$(( ($ch_ofs+$a) * $AROWS ))
                echo "wb sq2 fb_col$(( $a + $ch_ofs )) ${sq2_fb_set[@]:$row_ofs:$AROWS}"
            done
        fi
    else
        # SA FB, possibly fast-switching
        echo "wra sa enbl_mux $ch_ofs `repeat_string $config_fast_sa_fb 8`"
        if [ "$config_fast_sa_fb" == "1" ]; then
            for a in `seq 0 7`; do
                row_ofs=$(( ($ch_ofs+$a) * $AROWS ))
                echo "wb sa fb_col$(( $a + $ch_ofs )) ${sa_fb_set[@]:$row_ofs:$AROWS}"
            done
        else
            echo "wra sa fb $ch_ofs  ${sa_fb[@]:$ch_ofs:8}"
        fi
        # SQ1 bias, possibly fast-switching
        echo "wra sq1 enbl_mux $ch_ofs `repeat_string $config_fast_sq1_bias 8`"
        if [ "$config_fast_sq1_bias" == "1" ]; then
            for a in `seq 0 7`; do
                row_ofs=$(( ($ch_ofs+$a) * $AROWS ))
                echo "wb sq1 bias_col$(( $a + $ch_ofs )) ${sq1_bias_set[@]:$row_ofs:$AROWS}"
            done
        else
            echo "wra sq1 bias $ch_ofs  ${sq1_bias[@]:$ch_ofs:8}"
        fi
    fi >> $mce_script
done

# Servo loop re-init

for rc in 1 2 3 4; do
    [ "${config_rc[$(( $rc - 1 ))]}" == "0" ] && continue
    echo "wb rc$rc flx_lp_init 1" >> $mce_script
done

#END config_create.bash
#START config_run.bash

# The variable mce_script is the output location
if [ "$mce_script" == "" ]; then
    echo "$0 expects \$mce_script to be defined."
    exit 1
fi

# Hopefully that script exists...

if ! [ -e "$mce_script" ]; then
    echo "Script '$mce_script' does not exist!" >& 2
    exit 1
fi

err_line=( `mce_cmd -qf $mce_script` )
if [ "$?" != "0" ]; then 
    line_no=${err_line[1]}
    echo -e -n "Error on line $line_no of $mce_script:\n    "
    sed ${line_no}'q;d' $mce_script
    exit 1
fi

#END config_run.bash
