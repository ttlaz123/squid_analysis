#!/bin/bash
#START config_header.bash

#initialise environment
if [ ! -x ${MAS_VAR:=/usr/mce/bin/mas_var} ]; then
  echo "Cannot find mas_var.  Set MAS_VAR to the full path to the mas_var binary." >&2
  exit 1
else
  eval $(${MAS_VAR} -s)
fi

source ${MAS_SCRIPT}/mas_library.bash

#END config_header.bash
# START mas_param output
array_id="BA4_R4p8_20230516"
array_width=41
hardware_rc=( 1 1 1 1 )
hardware_sync=0
hardware_rect=1
hardware_mux11d=1
hardware_fast_sq2=2
hardware_rc_data=( 1 1 1 1 )
sb0_select_clk=0
sb0_use_dv=0
sb0_use_sync=0
sb1_select_clk=1
sb1_use_dv=2
sb1_use_sync=2
default_num_rows=41
default_sample_num=10
default_data_mode=10
default_flux_jumping=1
default_servo_p=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
default_servo_i=( 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 )
default_servo_d=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
default_sa_bias=( 17000 17500 17500 17000 17500 17500 17000 17000 15500 15500 15500 15500 15500 15500 16000 15500 15500 16000 16000 16000 17000 16000 15500 16000 17000 17000 17000 17000 17000 17000 16500 17000 )
default_sq2_bias=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
default_sq1_bias=( 6500 8000 10000 10000 10000 6500 7500 9000 7500 0 8000 0 8000 0 8000 8000 9000 8500 8500 8500 8500 9000 8500 8500 8500 8500 8000 8500 8500 9000 8500 8500 )
default_sq1_bias_off=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
default_row_select=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
default_row_deselect=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
columns_off=( 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
config_filter=1
filter_params=( 32295 15915 32568 16188 5 12 )
stop_after_sq1_servo=0
sa_offset_bias_ratio=0.500000
sa_ramp_bias=0
sa_ramp_flux_start=0
sa_ramp_flux_count=120
sa_ramp_flux_step=100
sa_ramp_bias_start=0
sa_ramp_bias_step=500
sa_ramp_bias_count=50
sq2_rows=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_servo_gain=( 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 )
sq1_servo_gain=( 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 )
sq2servo_gain=( 0.020000 0.020000 0.020000 0.020000 )
sq1servo_gain=( 0.010000 0.010000 0.010000 0.010000 )
sq2_servo_flux_start=0
sq2_servo_flux_count=400
sq2_servo_flux_step=30
sq1_servo_flux_start=-8000
sq1_servo_flux_count=400
sq1_servo_flux_step=40
sq2_servo_bias_ramp=0
sq2_servo_bias_start=2500
sq2_servo_bias_count=24
sq2_servo_bias_step=2500
sq1_servo_bias_ramp=1
sq1_servo_bias_start=0
sq1_servo_bias_count=60
sq1_servo_bias_step=500
sq1_servo_all_rows=0
config_mux11d_all_rows=1
mux11d_row_choice=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
optimize_rowsel_servo=0
rowsel_servo_flux_start=0
rowsel_servo_flux_count=100
rowsel_servo_flux_step=200
rowsel_servo_bias_ramp=0
rowsel_servo_bias_start=0
rowsel_servo_bias_count=20
rowsel_servo_bias_step=500
rowsel_servo_gain=( 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 0.020000 )
sq1_ramp_flux_start=-3000
sq1_ramp_flux_step=50
sq1_ramp_flux_count=121
sq1_ramp_check=1
locktest_pass_amplitude=5000
sq1_ramp_tes_bias=1
sq1_ramp_tes_bias_start=0
sq1_ramp_tes_bias_step=1
sq1_ramp_tes_bias_count=50
tes_bias_idle=( 0 0 0 )
tes_bias_normal=( 0 0 0 )
tes_bias_normal_time=0.100000
tes_bias_do_reconfig=0
reconfig_use_auto_iv=0
tuning_check_bias=0
tuning_therm_time=210
tuning_do_plots=1
tuning_plot_format="png"
sq2servo_safb_init=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq1servo_sq2fb_init=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sa_ramp_safb_adjust=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_servo_sq2fb_adjust=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_servo_ic_factor=1.000000
sq1_servo_ic_factor=1.000000
write_default_bias=0
ramp_tes_start=0
ramp_tes_step=0
ramp_tes_count=0
ramp_tes_final_bias=0
ramp_tes_initial_pause=0
ramp_tes_period_us=0
iv_data_mode=10
bias_line_card=( 7 8 9 )
bias_line_para=( 33 33 33 )
config_rc=( 1 1 1 1 )
config_sync=0
config_fast_sq2=0
config_fast_sq1_bias=1
config_fast_sa_fb=1
config_dead_tes=0
config_frail_tes=0
data_rate=60
row_len=120
num_rows=41
num_rows_reported=41
readout_row_index=0
sample_dly=110
sample_num=10
fb_dly=7
row_dly=4
data_mode=10
flux_jumping=1
servo_mode=3
servo_p=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
servo_i=( 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 )
servo_d=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
frail_servo_p=0
frail_servo_i=-10
frail_servo_d=0
dead_mask_list=( "squid1" "connection" )
dead_detectors
frail_mask_list=( "squid1" "multilock" "jumper" "connection" "tes_short" "other" )
frail_detectors
tes_bias=( 0 0 0 )
config_integral_clamp=0
integral_clamp_factor=0.000000
row_order=( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 )
sa_flux_quanta=( 6510 6510 6510 6510 6515 6510 6515 6510 6505 0 6505 0 6510 0 6500 6500 6525 6530 6525 6520 6525 6520 6530 6525 6450 6455 6455 6455 6455 6450 6450 6450 )
sq2_flux_quanta=( 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 65536 )
config_flux_quanta_all=1
flux_quanta=( 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 )
flux_quanta_all
fb_const=-8192
row_select=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
row_deselect=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq1_bias=( 6500 8000 10000 10000 10000 6500 7500 9000 7500 0 8000 0 8000 0 8000 8000 9000 8500 8500 8500 8500 9000 8500 8500 8500 8500 8000 8500 8500 9000 8500 8500 0 0 0 0 0 0 0 0 0 )
sq1_bias_off=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq1_bias_set=( 15000 15500 15000 15500 16500 15500 15000 15000 15000 15000 15000 15500 15500 15000 15000 15000 15500 15000 15000 15000 14500 15500 15000 15000 15000 15500 15000 15500 15000 15500 15500 15000 14500 16500 14500 15000 15500 15500 15000 15500 15000 15000 15500 15500 15500 15500 15500 15000 15500 15500 15500 15500 15500 15000 15000 15000 15000 15500 15000 15500 15000 15000 15000 16000 15500 15500 15500 15500 15500 15000 15500 15500 15500 15500 15500 15500 15500 15500 15500 15000 15000 15500 29500 29500 29500 29500 29500 29500 29500 29000 29500 29500 29500 29500 29500 29500 29000 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29000 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 11000 10500 10500 10500 10500 10500 10500 10500 10500 10500 10500 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 29500 29500 29500 29500 29000 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29000 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 28500 29500 29000 28500 29500 29500 29500 29000 29500 29500 28000 29500 29500 29500 29000 23500 27000 23000 29500 29500 26000 25500 29500 28500 29500 28000 28000 29000 29500 29000 27000 28000 29500 26500 29000 27500 28000 28000 29500 29500 29000 29000 29000 22500 24500 28500 29500 29000 28500 29000 28000 28000 29000 13500 14000 14000 14000 14000 14000 13500 13500 14500 14500 14000 14000 14000 14500 15000 13500 14500 14000 14500 14500 13500 13500 15500 14500 14500 14500 14000 14500 15000 14000 14000 13500 14000 15000 14500 13500 14000 14500 15000 14000 14500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29000 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 29500 28500 29500 29500 29000 29500 29500 29500 29500 29500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 29500 29500 29500 29000 27000 29000 29500 29000 26000 25500 29500 27500 25000 26500 29000 28000 29500 29000 29500 26000 29500 26500 29000 27500 26000 28000 27000 28500 29000 29500 27500 28500 26500 27500 29500 29500 29000 28500 29500 28000 29500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9500 9500 9500 9000 9500 9500 9500 9000 9500 9500 9000 9500 9500 9500 9000 9500 9000 9500 9500 9500 9500 9000 9000 9500 9000 9000 9000 9500 9000 9000 9000 9000 9000 9000 9000 9000 9500 9000 9000 9000 9500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 29500 0 0 0 29500 0 29500 29500 0 0 29000 0 0 29500 29000 0 0 29500 0 29000 29000 0 0 0 29500 0 29500 0 29500 0 0 0 0 0 0 0 0 29000 9500 9500 9500 9500 9500 9500 9500 9000 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9000 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 9500 12000 12000 12000 12000 12500 12000 12000 12500 11500 12000 12000 12000 12000 12500 12000 12000 12000 12000 12000 12000 12000 12000 12000 12500 12000 12000 12500 12000 12000 12000 12500 12000 12500 12000 12000 12500 12500 12500 12500 12000 12000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11000 11000 11000 11000 11500 11000 11000 11000 11500 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11000 11500 11000 11000 11000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 23000 28000 27500 29500 29000 24000 27500 20000 24000 24000 29500 26000 28000 24000 16500 24500 20000 29000 26000 28000 29000 28500 19500 20000 19000 19500 29500 22500 22500 22000 28000 23500 20000 28000 19000 26500 26500 29500 16000 21500 26500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_bias=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_fb=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
sq2_fb_set
sa_bias=( 17000 17500 17500 17000 17500 17500 17000 17000 15500 15500 15500 15500 15500 15500 16000 15500 15500 16000 16000 16000 17000 16000 15500 16000 17000 17000 17000 17000 17000 17000 16500 17000 )
sa_fb=( 2403 2300 892 2335 1909 1075 6467 2249 6097 8402 540 8402 1079 8402 712 1423 1528 586 587 1383 289 596 745 589 459 460 556 551 451 551 651 447 )
sa_offset=( 8500 8750 8750 8500 8750 8750 8500 8500 7750 7750 7750 7750 7750 7750 8000 7750 7750 8000 8000 8000 8500 8000 7750 8000 8500 8500 8500 8500 8500 8500 8250 8500 )
sa_fb_set=( 2403 2365 2403 2358 2290 2358 2401 2401 2398 2400 2399 2356 2360 2401 2393 2404 2333 2376 2403 2375 2435 2333 2401 2399 2377 2359 2408 2360 2390 2355 2357 2399 2437 2323 2441 2399 2361 2361 2399 2352 2377 2300 2237 2234 2241 2238 2236 2295 2236 2236 2237 2276 2287 2300 2304 2302 2300 2249 2261 2235 2257 2303 2259 2222 2239 2242 2281 2241 2239 2298 2234 2237 2237 2240 2237 2236 2235 2283 2241 2288 2300 2232 892 896 897 892 898 896 895 917 896 893 895 932 898 893 959 896 895 895 896 917 896 893 895 897 895 931 894 930 921 895 901 895 894 898 898 892 893 893 897 920 899 2335 2337 2334 2333 2334 2336 2333 2332 2339 2341 2331 2331 2336 2333 2334 2334 2335 2333 2329 2335 2336 2334 2332 2332 2333 2334 2360 2337 2365 2336 2252 2334 2332 2332 2340 2335 2335 2328 2334 2333 2334 1909 1905 1907 1905 1908 1908 1905 1907 1905 1905 1905 1909 1912 1910 1902 1908 1910 1906 1904 1911 1903 1909 1906 1908 1909 1906 1905 1908 1910 1912 1910 1909 1910 1908 1905 1908 1908 1907 1909 1906 1912 1075 1074 1076 1077 1083 1070 1074 1074 1079 1073 1074 1077 1073 1072 1074 1084 1076 1072 1074 1072 1078 1076 1073 1074 1074 1076 1075 1071 1071 1107 1076 1085 1093 1073 1073 1074 1085 1074 1076 1090 1075 6467 6464 6473 52 6494 64 6467 6467 0 13 6468 6488 6467 6491 6479 6481 6453 6473 6502 6497 6465 9 6483 6497 6489 6489 6462 6468 6469 6472 6474 63 29 6478 6468 6484 6490 6479 6485 6469 6478 2249 2217 2213 2221 2213 2216 2262 2251 2188 2192 2235 2218 2234 2216 2175 2253 2189 2218 2189 2188 2248 2247 2139 2193 2185 2184 2221 2187 2178 2222 2239 2265 2216 2174 2188 2251 2224 2189 2171 2220 2191 6097 6095 6102 6097 6090 6087 6095 6091 6095 6093 6096 6093 6097 6102 6105 6104 6101 6090 6104 6094 6095 6096 6094 6096 6101 6098 6104 6097 6097 6096 6096 6085 6117 6096 6096 6105 6107 6099 6090 6098 6095 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 540 535 543 544 578 550 541 546 606 599 539 581 620 596 550 563 532 542 541 601 543 591 554 575 609 563 583 559 540 542 579 563 595 578 545 544 555 561 541 555 539 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 1079 1094 1109 1171 1110 1108 1109 1169 1114 1111 1165 1092 1109 1109 1165 1113 1173 1114 1114 1109 1112 1172 1168 1109 1169 1165 1168 1110 1174 1172 1165 1168 1164 1171 1163 1166 1077 1165 1168 1167 1110 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 8402 712 713 712 642 713 713 714 642 711 643 639 715 710 649 708 712 636 646 712 716 643 708 651 650 713 711 712 644 712 641 716 644 713 711 710 717 715 714 714 711 651 1423 1436 1431 1422 1424 1438 1437 1502 1436 1435 1436 1436 1435 1426 1427 1433 1437 1433 1436 1434 1423 1489 1433 1435 1424 1435 1433 1430 1443 1437 1440 1435 1436 1434 1431 1422 1439 1435 1436 1436 1440 1528 1525 1531 1532 1496 1531 1530 1463 1610 1531 1534 1532 1540 1460 1536 1547 1528 1525 1527 1529 1531 1529 1524 1501 1530 1531 1470 1532 1529 1532 1461 1527 1473 1531 1530 1499 1455 1462 1460 1527 1530 586 580 585 589 585 591 585 592 584 585 592 583 581 578 580 589 590 589 587 578 586 588 587 587 582 587 585 590 587 583 580 583 582 584 589 584 591 590 588 585 577 587 586 590 590 588 589 590 590 587 587 590 586 587 587 589 589 589 591 588 587 588 590 586 590 588 589 586 586 589 588 588 588 590 589 589 590 590 591 589 587 587 1383 1380 1382 1383 1312 1383 1381 1385 1311 1380 1389 1372 1379 1384 1378 1385 1383 1381 1383 1385 1383 1394 1388 1380 1386 1386 1420 1385 1389 1382 1383 1391 1384 1380 1383 1386 1382 1311 1384 1385 1387 289 290 290 292 290 289 291 288 290 287 285 292 289 289 291 288 287 287 291 292 292 298 289 291 289 286 289 289 289 290 291 286 292 292 286 290 288 291 288 289 291 596 597 597 602 594 600 596 605 600 593 599 597 598 591 598 601 599 604 601 594 597 598 596 600 597 598 598 600 598 593 595 597 594 594 601 596 602 602 597 596 593 745 669 685 653 662 743 683 794 732 733 652 706 674 735 859 720 801 664 701 676 664 665 799 794 811 800 657 751 750 762 675 745 792 671 809 698 696 651 859 773 703 589 583 587 590 586 588 586 589 594 594 589 590 584 584 590 586 590 587 587 589 589 591 586 587 587 587 588 588 586 591 589 591 591 587 591 589 589 591 590 589 588 459 456 457 457 457 458 455 457 455 457 456 457 457 458 455 455 456 457 455 457 458 456 457 458 457 455 455 453 456 456 453 457 457 454 455 455 454 455 453 456 456 460 453 456 449 457 455 457 458 459 455 451 456 452 459 456 453 444 458 453 459 458 458 456 455 456 455 442 453 457 456 456 456 455 455 453 451 454 456 453 457 456 556 556 557 557 556 555 554 556 556 557 555 560 554 555 562 554 554 556 553 554 554 557 554 557 555 557 554 554 554 555 555 554 557 554 554 555 552 555 556 554 553 551 552 548 545 551 545 551 549 549 550 541 555 545 559 550 552 546 553 546 556 547 547 555 547 555 549 548 545 557 552 549 549 552 553 546 545 544 558 549 554 551 451 452 458 454 451 457 453 455 451 451 454 452 452 449 452 453 454 454 454 447 451 455 454 454 448 455 452 451 451 451 453 449 450 450 452 453 454 451 454 451 446 551 554 548 542 554 545 556 549 549 553 547 564 550 557 555 553 547 552 547 561 554 549 554 550 557 551 550 548 555 562 554 551 559 555 543 547 546 552 550 554 561 651 654 656 659 654 663 653 662 657 650 657 656 651 646 657 660 658 658 657 648 657 659 654 657 651 658 656 658 658 650 657 653 652 656 657 655 658 659 662 655 656 447 450 452 446 454 443 457 441 445 453 440 458 451 455 453 445 443 451 441 461 455 445 452 454 453 453 452 444 448 457 456 451 458 452 442 446 440 450 448 448 465 )
config_adc_offset_all=1
adc_offset_c=( -1609 27 -3922 -12128 3024 -3635 293 -700 -2061 0 -6794 0 -4143 0 -1086 -16068 -739 2145 1000 6239 -894 2749 15 3314 -7948 -11518 -13482 -12282 -13184 -18531 -18128 -14582 )
adc_offset_cr=( -323 -251 -226 -165 -179 -165 21 -292 -252 -291 -249 -101 -219 -243 -61 -200 -163 -167 -269 -138 91 -7 5 -104 -106 -250 -197 -127 -294 -145 -227 -135 -174 -251 -217 -147 59 -283 -205 -219 -119 -314 -176 -174 -196 -180 -164 138 -179 -186 -184 56 -374 -308 -333 -310 -319 -242 -153 -176 302 -322 -146 -238 -179 -201 -353 -170 -187 -302 -174 -178 -178 -204 -187 -179 -189 -372 -174 -267 125 419 -571 -556 -613 -556 -582 -632 -607 -596 -609 -585 -615 -722 -640 -597 -746 -572 -561 -616 -623 -674 -553 -577 -617 -640 -626 -785 -588 -749 -596 -579 -597 -592 -617 -575 -594 -609 -580 -621 -626 -707 -568 -1272 -1276 -1259 -1275 -1268 -1264 -1238 -1242 -1301 -1298 -1256 -1252 -1267 -1272 -1280 -1274 -1254 -1260 -1231 -1264 -1273 -1265 -1245 -1260 -1264 -1272 -1356 -1270 -1365 -1261 -1236 -1255 -1238 -1259 -1287 -1274 -1257 -1214 -1270 -1274 -1261 -412 -391 -438 -380 -409 -344 -387 -422 -408 -417 -420 -413 -411 -447 -372 -411 -425 -412 -419 -422 -366 -399 -398 -338 -437 -380 -371 -424 -401 -414 -418 -393 -413 -393 -420 -378 -383 -404 -391 -448 -330 -312 -310 -312 -316 -288 -278 -296 -292 -325 -304 -307 -326 -289 -291 -307 -295 -314 -288 -306 -286 -332 -320 -285 -312 -304 -304 -296 -300 -293 -333 -323 -291 -274 -297 -306 -308 -293 -294 -310 -205 -300 23 34 49 37 96 32 22 33 59 45 34 11 29 31 82 2 89 31 50 4 31 -13 4 37 33 35 52 16 59 42 28 76 63 64 28 -9 -4 5 57 120 20 -157 -153 -155 -181 -142 -143 -229 -152 -162 -190 -250 -172 -240 -282 -209 -167 -143 -183 -76 -160 -145 -148 -100 -185 -159 -145 -161 -137 -241 -158 -263 -220 -154 -187 -50 -171 -181 -154 -189 -183 -170 -242 -216 -240 -248 -216 -203 -204 -204 -220 -212 -221 -199 -232 -249 -235 -260 -229 -203 -260 -209 -218 -247 -218 -227 -244 -232 -261 -217 -225 -222 -226 -182 -247 -242 -225 -215 -265 -236 -218 -223 -223 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -668 -642 -682 -640 -636 -673 -672 -661 -698 -623 -658 -689 -673 -690 -667 -665 -632 -630 -671 -662 -675 -664 -695 -659 -712 -657 -661 -685 -620 -670 -683 -692 -688 -682 -688 -674 -691 -689 -670 -620 -663 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -341 -397 -477 -454 -507 -462 -451 -443 -504 -463 -430 -394 -489 -477 -441 -479 -449 -475 -517 -467 -465 -499 -429 -469 -474 -432 -450 -454 -485 -460 -468 -425 -473 -447 -417 -442 -323 -423 -438 -425 -445 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192 -4525 -1283 -347 -80 -4506 -1287 -367 -74 -4498 -84 -44 -4482 -1316 -70 -4480 -1310 -47 -53 -4477 -1364 -57 -4491 -79 -69 -4535 -1346 -382 -87 -4488 -92 -4537 -76 -4492 -1339 -407 -210 -169 -172 -143 -152 -76 -1523 -1537 -1784 -1468 -1775 -1548 -1793 -1506 -1563 -1775 -1753 -1820 -1521 -1737 -1789 -1519 -1515 -1507 -1823 -1523 -1716 -1769 -1512 -1504 -1527 -1528 -1523 -1490 -1585 -1527 -1830 -1528 -1814 -1523 -1777 -1481 -1808 -1786 -1532 -1518 -1742 -395 -406 -403 -401 -505 -387 -406 -377 -473 -397 -423 -353 -441 -302 -432 -478 -377 -403 -402 -395 -412 -393 -335 -539 -381 -361 -382 -418 -366 -393 -343 -404 -426 -423 -370 -540 -337 -352 -336 -384 -397 216 267 183 176 181 124 238 151 244 164 211 247 254 208 194 234 160 221 243 270 269 229 174 243 188 171 254 231 237 233 204 181 198 247 237 249 164 227 181 157 216 125 98 110 116 78 75 108 82 77 90 102 132 120 92 112 113 82 70 125 83 127 70 128 77 86 79 83 129 80 98 83 119 74 74 117 80 108 65 122 88 128 491 505 480 494 477 488 517 459 499 514 456 538 523 469 483 491 493 475 501 513 521 456 472 473 495 524 338 479 499 532 468 494 460 479 491 487 478 510 502 476 488 -100 -113 -72 -127 -52 -72 -84 -48 -52 -74 -107 -117 -108 -52 -98 -114 -86 -73 -99 -85 -125 -145 -93 -104 -67 -88 -128 -94 -68 -103 -89 -50 -75 -92 -87 -83 -109 -67 -46 -113 -121 309 268 293 271 312 251 283 247 219 244 200 299 229 277 320 266 269 178 293 244 295 235 337 305 265 280 243 254 301 272 217 310 278 279 298 266 274 252 302 253 289 13 18 -33 -16 -19 -52 -18 12 5 2 -3 -10 -3 -7 -20 31 -15 -23 19 -27 -14 2 19 -2 1 7 -43 33 30 1 -16 -25 15 10 15 -5 0 2 76 -6 -26 275 421 361 337 321 240 345 205 307 286 379 281 344 275 166 385 259 423 345 327 379 299 235 318 326 303 442 305 304 330 390 309 274 438 235 381 328 385 172 362 423 -812 -802 -775 -779 -805 -786 -808 -808 -775 -808 -806 -777 -806 -783 -793 -809 -808 -814 -802 -807 -778 -770 -812 -813 -776 -808 -810 -802 -815 -771 -804 -813 -812 -769 -827 -813 -808 -774 -764 -776 -777 -1184 -1125 -1176 -1107 -1182 -1122 -1126 -1184 -1132 -1135 -1155 -1144 -1161 -1191 -1183 -1125 -1095 -1139 -1122 -1190 -1195 -1191 -1130 -1167 -1126 -1124 -1082 -1170 -1181 -1126 -1138 -1139 -1175 -1119 -1122 -1156 -1126 -1120 -1170 -1139 -1179 -1368 -1337 -1331 -1336 -1357 -1363 -1359 -1364 -1374 -1368 -1325 -1350 -1333 -1328 -1400 -1361 -1368 -1378 -1363 -1325 -1362 -1378 -1372 -1339 -1387 -1339 -1328 -1363 -1377 -1373 -1365 -1330 -1375 -1357 -1367 -1378 -1323 -1334 -1379 -1378 -1360 -1239 -1176 -1247 -1252 -1183 -1142 -1267 -1265 -1256 -1186 -1233 -1275 -1163 -1302 -1243 -1264 -1180 -1274 -1240 -1199 -1234 -1250 -1272 -1167 -1268 -1238 -1169 -1251 -1293 -1173 -1250 -1254 -1273 -1175 -1158 -1184 -1239 -1210 -1254 -1183 -1269 -1330 -1346 -1313 -1341 -1339 -1372 -1301 -1352 -1287 -1291 -1297 -1298 -1339 -1277 -1337 -1342 -1345 -1318 -1298 -1282 -1337 -1355 -1346 -1346 -1289 -1309 -1300 -1291 -1296 -1346 -1305 -1334 -1289 -1342 -1347 -1350 -1349 -1301 -1359 -1352 -1280 -1868 -1880 -1871 -1862 -1890 -1748 -1912 -1894 -1874 -1781 -1890 -1926 -1879 -1928 -1901 -1896 -1875 -1796 -1867 -1823 -1916 -1880 -1900 -1771 -1801 -1869 -1899 -1898 -1900 -1897 -1798 -1794 -1913 -1902 -1881 -1857 -1773 -1883 -1877 -1777 -1937 -1777 -1788 -1836 -1795 -1783 -1886 -1784 -1876 -1780 -1850 -1783 -1777 -1826 -1826 -1851 -1794 -1805 -1782 -1780 -1765 -1788 -1855 -1841 -1779 -1841 -1850 -1804 -1793 -1791 -1782 -1789 -1846 -1767 -1855 -1857 -1836 -1794 -1791 -1875 -1831 -1775 -1480 -1376 -1501 -1514 -1487 -1355 -1496 -1463 -1371 -1490 -1361 -1526 -1393 -1510 -1515 -1486 -1362 -1498 -1473 -1421 -1536 -1483 -1493 -1515 -1494 -1474 -1504 -1494 -1501 -1499 -1412 -1412 -1534 -1397 -1491 -1476 -1370 -1496 -1473 -1373 -1522 )
# END mas_param output
#START config_create.bash

#initialise environment
if [ ! -x ${MAS_VAR:=/usr/mce/bin/mas_var} ]; then
  echo "Cannot find mas_var.  Set MAS_VAR to the full path to the mas_var binary."
  exit 1
else
  eval $(${MAS_VAR} -s)
fi

create_start=`print_ctime`

mce_script=${MAS_TEMP}/`whoami`_config_mce${MAS_MCE_DEV}.scr

# Remove existing script
[ -e "$mce_script" ] && rm -f "$mce_script"

# New file, group rw
umask 002
touch "$mce_script"

# For raveled 2d arrays
AROWS=${array_width}

# Choose sync box parameters:
if [ "$config_sync" != "0" ]; then
    select_clk=$sb1_select_clk
    use_sync=$sb1_use_sync
    use_dv=$sb1_use_dv
else
    select_clk=$sb0_select_clk
    use_sync=$sb0_use_sync
    use_dv=$sb0_use_dv
fi

# Calculate the corrected adc offset.
adc_offset_divided=( adc_offset_c )
for i in `seq 0 $(( ${#adc_offset_c[@]} - 1))` ; do
    adc_offset_divided[$i]=$(( ${adc_offset_c[$i]} / $sample_num ))
done

# Perhaps you don't know about mux11d -- default to off
hardware_mux11d=${hardware_mux11d:-0}

# Allow some flexibility in hardware_fast_sq2 vs. hardware_bac
if [ "$hardware_fast_sq2" == "" ]; then
    hardware_fast_sq2=${hardware_bac}
fi

#----------------------------------------------
# sys commands
#----------------------------------------------
echo "wb sys row_len $row_len" >> $mce_script
echo "wb sys num_rows $num_rows" >> $mce_script

if [ "$hardware_rect" == "0" ]; then
    # Pre-v5 firmware
    echo "wb cc num_rows_reported $num_rows_reported" >> $mce_script
else
    # v5 and later (rectangle mode)
    echo "wb cc num_rows_reported $num_rows_reported" >> $mce_script
    echo "wb cc num_cols_reported 8" >> $mce_script
    echo "wb rca num_rows_reported $num_rows_reported" >> $mce_script
    echo "wb rca num_cols_reported 8" >> $mce_script
    echo "wb rca readout_row_index 0" >> $mce_script
    echo "wb rca readout_col_index 0" >> $mce_script
fi

#----------------------------------------------
# Clock Card
#----------------------------------------------
echo "wb cc data_rate $data_rate" >> $mce_script
echo "wb cc select_clk $select_clk" >> $mce_script
echo "wb cc use_dv $use_dv" >> $mce_script
echo "wb cc use_sync $use_sync" >> $mce_script
echo "wb cc ret_dat_s 1 1" >> $mce_script

if [ "$hardware_rect" != "0" ]; then
    # Assemble bits for choosing readout cards to report data
    bit=0x20  # RC1
    rc_bits=0
    for i in `seq 0 3`; do
        if [ "${hardware_rc_data[$i]}" != "0" ]; then
            rc_bits=$(( $rc_bits + $bit ))
        fi
        bit=$(( $bit / 2 ))
    done
    echo "wb cc rcs_to_report_data $rc_bits" >> $mce_script
fi

# Write cc user_word based on array_id - this shows up in frame data
user_word=0
if [ -e "${MAS_DATA_ROOT}/array_id" ]; then
    array_id=`cat ${MAS_DATA_ROOT}/array_id`
    user_word=`awk "($$1 == \"$array_id\") {print $$2}" $MAS_CONFIG/array_list`
    [ "$user_word" == "" ] && user_word=0
fi
echo "wb cc user_word $user_word" >> $mce_script


#----------------------------------------------
# Readout Cards
#----------------------------------------------
## Mask out SA and SQ2 bias for bad columns.
vals=${sa_bias[@]}
mask=${columns_off[@]}
sa_bias=( `mask_values "$vals" "$mask" 1 0` )

vals=${sq2_bias[@]}
mask=${columns_off[@]}
sq2_bias=( `mask_values "$vals" "$mask" 1 0` )

for rc in 1 2 3 4; do
    min_flux_quantum=999999
    max_gaini=0
    [ "${config_rc[$(( $rc - 1 ))]}" == "0" ] && continue
    [ "${hardware_rc[$(( $rc - 1 ))]}" == "0" ] && continue

    ch_ofs=$(( ($rc-1)*8 ))
#    echo "Readout card $rc: time=" `print_elapsed $create_start` >&2

    echo "wb rc$rc readout_row_index $readout_row_index" >> $mce_script
    echo "wb rc$rc readout_col_index 0" >> $mce_script
    echo "wb rc$rc sample_dly   $sample_dly" >> $mce_script
    echo "wb rc$rc sample_num   $sample_num" >> $mce_script
    echo "wb rc$rc fb_dly       $fb_dly" >> $mce_script
    echo "wb rc$rc fb_const    " `repeat_string $fb_const 8` >> $mce_script
    echo "wb rc$rc data_mode    $data_mode" >> $mce_script
    echo "wb rc$rc sa_bias      ${sa_bias[@]:$ch_ofs:8}" >> $mce_script
    echo "wb rc$rc offset       ${sa_offset[@]:$ch_ofs:8}" >> $mce_script

    # Don't auto-servo columns flagged in "columns_off"
    if [ "$servo_mode" == "3" ]; then
        echo -n "wb rc$rc servo_mode  "
        for c in `seq 0 7`; do
            chan=$(( $c + $ch_ofs ))
            if [ "${columns_off[$chan]}" == "1" ]; then
                echo -n " 1"
            else
                echo -n " 3"
            fi
        done
        echo
    else
        # Servo modes other than 3 are not affected by columns_off
        echo "wb rc$rc servo_mode   " `repeat_string $servo_mode 8`
    fi >> $mce_script

    # Servo parameters, including dead and frail detector turn-offs
    for c in `seq 0 7`; do
        chan=$(( $c + $ch_ofs ))
        dead_ofs=$(( ($c + $ch_ofs)*$array_width ))

        if [ "${columns_off[$chan]}" != "1" -a $chan -lt $num_rows ]; then
            if [ ${servo_i[$chan]} -gt $max_gaini ]; then
                max_gaini=${servo_i[$chan]}
            fi
            if [ $((-1 * ${servo_i[$chan]})) -gt $max_gaini ]; then
                max_gaini=$((-1 * ${servo_i[$chan]}))
            fi
        fi

        p_terms=( `repeat_string ${servo_p[$chan]} $array_width` )
        i_terms=( `repeat_string ${servo_i[$chan]} $array_width` )
        d_terms=( `repeat_string ${servo_d[$chan]} $array_width` )

        if [ "$config_frail_tes" == "0" ]; then
            for r in `seq 0 $(( $array_width - 1 ))`; do
                if [ "${frail_detectors[$(( $dead_ofs + $r ))]}" != "0" ]; then
                    p_terms[$r]=$frail_servo_p
                    i_terms[$r]=$frail_servo_i
                    d_terms[$r]=$frail_servo_d
                fi
            done
        fi

        if [ "$config_dead_tes" == "0" ]; then
            for r in `seq 0 $(( $array_width - 1 ))`; do
                if [ "${dead_detectors[$(( $dead_ofs + $r ))]}" != "0" ]; then
                    p_terms[$r]=0
                    i_terms[$r]=0
                    d_terms[$r]=0
                fi
            done
        fi

        echo "wb rc$rc gainp$c ${p_terms[@]}" >> $mce_script
        echo "wb rc$rc gaini$c ${i_terms[@]}" >> $mce_script
        echo "wb rc$rc gaind$c ${d_terms[@]}" >> $mce_script
    done

    # Flux jump quanta, and enable/disable
    for c in `seq 0 7`; do
        chan=$(( $c +  $ch_ofs ))
        r_off=$(( $array_width * $chan ))

        if [ "${config_flux_quanta_all}" != "0" ]; then
	    if [ "$config_dead_tes" == "0" ]; then
		for r in `seq 0 $(( $num_rows - 1 ))`; do
		    if [ "${dead_detectors[$(( $r_off + $r ))]}" == "0" \
			-a ${flux_quanta_all[$(( $r_off + $r ))]} -lt $min_flux_quantum \
			-a ${flux_quanta_all[$(( $r_off + $r ))]} -gt 0 ]; then
			min_flux_quantum=${flux_quanta_all[$(( $r_off + $r ))]}
		    fi
		done
	    else
		min_flux_quantum=`find_min_positive ${min_flux_quantum} ${flux_quanta_all[@]:$r_off:$num_rows}`
	    fi
            echo "wb rc$rc flx_quanta$c ${flux_quanta_all[@]:$r_off:$num_rows}" >> $mce_script
        else
            if [ ${flux_quanta[$chan]} -lt ${min_flux_quantum} \
              -a ${flux_quanta[$chan]} -gt 0 ]; then
                min_flux_quantum=${flux_quanta[$chan]}
            fi
            repeat_string "${flux_quanta[$chan]}" $AROWS "wb rc$rc flx_quanta$c" >> $mce_script
        fi

        if [ "${config_adc_offset_all}" != "0" ]; then
            echo "wb rc$rc adc_offset$c ${adc_offset_cr[@]:$r_off:$array_width}" >> $mce_script
        else
            repeat_string "${adc_offset_divided[$chan]}" $AROWS "wb rc$rc adc_offset$c" >> $mce_script
        fi
    done

    # Readout filter
    if [ "$config_filter" == "1" ]; then
        echo "wb rca fltr_coeff ${filter_params[@]}" >> $mce_script
    fi

    echo "wb rc$rc en_fb_jump $flux_jumping" >> $mce_script

    # integral clamp

    if [ "$config_integral_clamp" == "1" ]; then
        # don't divide by zero
        if [ $max_gaini == "0" ]; then
            integral_clamp=0
        elif [ $flux_jumping == "1" ]; then
            integral_clamp=$(printf %i $(echo "$integral_clamp_factor * 127 * 4096 * $min_flux_quantum / $max_gaini" | bc))
        else
            integral_clamp=$(printf %i $(echo "$integral_clamp_factor * 8192 * 4096 / $max_gaini" | bc))
        fi
        # don't overflow
        if [ $integral_clamp -gt 2147483647 ]; then
          integral_clamp=2147483647
        fi
        echo "wb rc$rc integral_clamp $integral_clamp" >> $mce_script
    fi
done

# echo "Other cards: time=" `print_elapsed $create_start` >&2

#----------------------------------------------
# Address Card
#----------------------------------------------

# I wanted to put this below next to ac enbl_mux, but a cryptic
# comment in the bc section of this script makes it sound like enbl
# needs to be sent to the bc before sending the values for the DACs.
# So putting it here, in advance.
if [ "$mux11d_hybrid_row_select" == "1" ]; then
    for i in `seq 0 $((${#mux11d_row_select_cards[@]}-1))`; do
	card=${mux11d_row_select_cards[$i]}
	r0=${mux11d_row_select_cards_row0[$i]}
	for j in `seq 3`; do
	    if [ "$card" == "bc$j" ]; then
		for k in `seq 0 $((${#mux11d_mux_order[@]}-1))`; do
		    rsmr0=$((${mux11d_mux_order[k]}-$r0))
		    if [ \( "${rsmr0}" -ge "0" \) -a \( "${rsmr0}" -lt "32" \) ]; then
			echo "wra ${card} enbl_mux ${rsmr0} 1" >> $mce_script
		    fi
		done
	    fi
	done
    done
fi


if [ "$hardware_mux11d" == "0" ]; then
    echo "wb ac on_bias   ${sq1_bias[@]}" >> $mce_script
    echo "wb ac off_bias  ${sq1_bias_off[@]}" >> $mce_script
else
    if [ "$mux11d_hybrid_row_select" == "1" ]; then
	## Hybridized muxing - prep ac on_bias/off_bias lines
	if [ ${#mux11d_row_select_cards[@]} != ${#mux11d_row_select_cards_row0[@]} ]; then
	    # Nonsensical configuration.  Give up...
	    echo "Length of mux11d_row_select_cards=(${mux11d_row_select_cards[@]}) and mux11d_row_select_cards_row0=(${#mux11d_row_select_cards_row0[@]}) arrays not equal.  Abort!"
	    exit 1
	else 
	    # Loop through the MCE Cards we're hybridizing the row
	    # selects over and deal with them one at a time.  Really
	    # only two cases; AC or BC.
            for i in `seq 0 $((${#mux11d_row_select_cards[@]}-1))`; do
		card=${mux11d_row_select_cards[$i]}
		r0=${mux11d_row_select_cards_row0[$i]}

		## For now, will assume user has correctly spaced r0
		## for the cards; ie, AC has 41 or more indices
		## between it and the r0 for the next card, and BCs
		## have 32 or more indicies between them and the r0
		## for the next card.
		
		#
		# Configure AC-driven row selects
		if [ "$card" == "ac" ]; then
		    # These will be written to ac on_bias and ac
		    # off_bias
		    hybrid_ac_on_bias=(`repeat_string 0 41`)
		    hybrid_ac_off_bias=(`repeat_string 0 41`)
		    for k in `seq 0 $((${#mux11d_mux_order[@]}-1))`; do

			# don't go higher than # of rows
                        if [ $k -gt $(( $num_rows - 1 )) ]; then
                            continue
                        fi

			rsmr0=$((${mux11d_mux_order[k]}-$r0))
			if [ \( "${rsmr0}" -ge "0" \) -a \( "${rsmr0}" -lt "41" \) ]; then
			    # If there is no row select for this
			    # entry, throw an exception, unless it's
			    # the AC idle row
			    if [ ! "$k" -lt "${#row_select[@]}" ]; then
				if [ "${mux11d_mux_order[k]}" -eq "${mux11d_ac_idle_row}" ]; then
				    continue
				fi
				# Not the AC idle row.  Exception!
				echo "The row_select (size=${#row_select[@]}) and row_deselect (size=${#row_deselect[@]})"
				echo "lists are shorter than the mux11d_mux_order (size=${#mux11d_mux_order[@]}) list in"
				echo "experiment.cfg, and the row with no corresponding select/deselect is *not* the AC"
				echo "idle row.  (k=${k} r0=${r0} rsmr0=${rsmr0} row_select[$k]=${row_select[$k]}"
				echo "row_deselect[$k]=${row_deselect[$k]}).  Abort!"
				exit 1
			    else
				hybrid_ac_on_bias[${rsmr0}]=${row_select[$k]}
				hybrid_ac_off_bias[${rsmr0}]=${row_deselect[$k]}
			    fi
			fi
		    done

		    echo "wb ac on_bias   ${hybrid_ac_on_bias[@]}" >> $mce_script
		    echo "wb ac off_bias  ${hybrid_ac_off_bias[@]}" >> $mce_script
		fi
		# Done configuring AC-driven row selects

		#
		# Configure BC-driven row selects
		for j in `seq 3`; do
		    if [ "$card" == "bc$j" ]; then
			for k in `seq 0 $((${#mux11d_mux_order[@]}-1))`; do
			    rsmr0=$((${mux11d_mux_order[k]}-$r0))
			    if [ \( "${rsmr0}" -ge "0" \) -a \( "${rsmr0}" -lt "32" \) ]; then
				hybrid_bc_fb_col=(`repeat_string ${row_deselect[$k]} $AROWS`)
				hybrid_bc_fb_col[$k]=${row_select[$k]}
				echo "wb bc$j fb_col${rsmr0}   ${hybrid_bc_fb_col[@]}" >> $mce_script
			    fi
			done
		    fi
		done
		# Done configuring BC-driven row selects
		#

	    done
	fi
    else # Just using ac on_bias/off_bias to switch mux11d rows
	# Must take ac row order into account ... row select/deselect
	# are really just synonyms for ac on_bias/off_bias
	for rs in `seq 0 $((${#row_order[@]}-1))`; do
	    echo "wra ac on_bias ${row_order[${rs}]} ${row_select[${rs}]}" >> $mce_script
	    echo "wra ac off_bias ${row_order[${rs}]} ${row_deselect[${rs}]}" >> $mce_script
	done
    fi
fi

echo "wb ac row_dly   $row_dly" >> $mce_script
echo "wb ac row_order ${row_order[@]}" >> $mce_script
echo "wb ac enbl_mux  1" >> $mce_script

# Set the TES biases via the "tes bias" virtual address
if [ "$tes_bias_do_reconfig" != "0" ]; then
    echo "wb tes bias ${tes_bias[@]}" >> $mce_script
fi

#----------------------------------------------
# Bias Cards - use functional mappings!
#----------------------------------------------

# Set enbl_mux before writing per-column values, since DACs need to be
# kicked once after enbl_mux is turned off.

# For biasing address card, set the correct mux_mode and row_order
# But only if we're not mux11d.
if [ "$hardware_mux11d" == "0" ]; then

    if [ "$hardware_fast_sq2" == "1" ]; then
        echo "wb bac row_order ${row_order[@]}" >> $mce_script
        echo "wb bac enbl_mux 2" >> $mce_script
    fi

    # For new bias card in fast_sq2 mode, set enbl_mux for all columns
    if [ "$hardware_fast_sq2" == "2" ]; then
        for rc in 1 2 3 4; do
            [ "${config_rc[$(( $rc - 1 ))]}" == "0" ] && continue
            ch_ofs=$(( ($rc-1)*8 ))
            echo "wra sq2 enbl_mux $ch_ofs `repeat_string $config_fast_sq2 8`" >> $mce_script
        done
    fi
fi

#Still only write the relevant columns depending on readout card configuration
for rc in 1 2 3 4; do
    [ "${config_rc[$(( $rc - 1 ))]}" == "0" ] && continue

    ch_ofs=$(( ($rc-1)*8 ))

    if [ "$hardware_mux11d" == "0" ]; then

        echo "wra sa  fb    $ch_ofs  ${sa_fb[@]:$ch_ofs:8}"
        echo "wra sq2 bias  $ch_ofs  ${sq2_bias[@]:$ch_ofs:8}"

        # SQ2 feedback
        if [ "$config_fast_sq2" == "0" ]; then
            if [ "$hardware_fast_sq2" == "1" ]; then
                # Emulate bias card with a BAC
                for a in `seq 0 7`; do
                    c=$(( $ch_ofs + $a ))
                    repeat_string "${sq2_fb[$c]}" $AROWS "wb bac fb_col$c"
                done
            else
                # People still use bias cards?
                echo "wra sq2 fb    $ch_ofs  ${sq2_fb[@]:$ch_ofs:8}"
            fi
        else
            # BAC and new bias card firmware support sq2 fb_col%
            for a in `seq 0 7`; do
                row_ofs=$(( ($ch_ofs+$a) * $AROWS ))
                echo "wb sq2 fb_col$(( $a + $ch_ofs )) ${sq2_fb_set[@]:$row_ofs:$AROWS}"
            done
        fi
    else
        # SA FB, possibly fast-switching
        echo "wra sa enbl_mux $ch_ofs `repeat_string $config_fast_sa_fb 8`"
        if [ "$config_fast_sa_fb" == "1" ]; then
            for a in `seq 0 7`; do
                row_ofs=$(( ($ch_ofs+$a) * $AROWS ))
                echo "wb sa fb_col$(( $a + $ch_ofs )) ${sa_fb_set[@]:$row_ofs:$AROWS}"
            done
        else
            echo "wra sa fb $ch_ofs  ${sa_fb[@]:$ch_ofs:8}"
        fi
        # SQ1 bias, possibly fast-switching
        echo "wra sq1 enbl_mux $ch_ofs `repeat_string $config_fast_sq1_bias 8`"
        if [ "$config_fast_sq1_bias" == "1" ]; then
            for a in `seq 0 7`; do
                row_ofs=$(( ($ch_ofs+$a) * $AROWS ))
                echo "wb sq1 bias_col$(( $a + $ch_ofs )) ${sq1_bias_set[@]:$row_ofs:$AROWS}"
            done
        else
            echo "wra sq1 bias $ch_ofs  ${sq1_bias[@]:$ch_ofs:8}"
        fi
    fi >> $mce_script
done

# Servo loop re-init

for rc in 1 2 3 4; do
    [ "${config_rc[$(( $rc - 1 ))]}" == "0" ] && continue
    echo "wb rc$rc flx_lp_init 1" >> $mce_script
done

#END config_create.bash
#START config_run.bash

# The variable mce_script is the output location
if [ "$mce_script" == "" ]; then
    echo "$0 expects \$mce_script to be defined."
    exit 1
fi

# Hopefully that script exists...

if ! [ -e "$mce_script" ]; then
    echo "Script '$mce_script' does not exist!" >& 2
    exit 1
fi

err_line=( `mce_cmd -qf $mce_script` )
if [ "$?" != "0" ]; then 
    line_no=${err_line[1]}
    echo -e -n "Error on line $line_no of $mce_script:\n    "
    sed ${line_no}'q;d' $mce_script
    exit 1
fi

#END config_run.bash
